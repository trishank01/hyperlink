{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Charts/Charts.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Charts/Charts.module.css","components/CountryPicker/CountryPicker.module.css","img/covid.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","varaint","start","end","value","duration","separator","Date","toDateString","variant","url","fetchData","country","a","changeableurl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Charts","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fectchedCountries","setFetchedCountries","FormControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","corona","alt","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.79949e47.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2Hzyw\",\"card\":\"Cards_card__3rJjG\",\"infected\":\"Cards_infected__1mAnJ\",\"recovered\":\"Cards_recovered__1CU9h\",\"deaths\":\"Cards_deaths__sYMyZ\"};","import React from 'react';\r\nimport {Card,CardContent,Typography,Grid} from '@material-ui/core'\r\nimport styles from './Cards.module.css'\r\nimport CountUp from 'react-countup'\r\nimport cx from 'classnames'\r\nconst Cards = ({data:{ confirmed,recovered,deaths,lastUpdate}}) => {\r\n    \r\n    if(!confirmed){\r\n        return 'Loading..'\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={styles.container}>\r\n         <Grid container spacing={3} justify='center'>\r\n             <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\r\n           <CardContent>\r\n               <Typography color='textSecondary' gutterBottom>Infected</Typography>\r\n                   <Typography varaint='h5'>\r\n                       <CountUp start={0} end={confirmed.value} duration={2.5} separator=\"\"/>\r\n                   </Typography>\r\n    <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\r\n               <Typography variant='body2'>Number of active cases of COVID-19</Typography>\r\n           </CardContent>\r\n             </Grid>\r\n             <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\r\n           <CardContent>\r\n               <Typography color='textSecondary' gutterBottom>Recovered</Typography>\r\n               <Typography varaint='h5'>\r\n                       <CountUp start={0} end={recovered.value} duration={2.5} separator=\"\"/>\r\n                   </Typography>\r\n                   <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\r\n               <Typography variant='body2'>Number of recoveries cases of COVID-19</Typography>\r\n           </CardContent>\r\n             </Grid>\r\n             <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\r\n           <CardContent>\r\n               <Typography color='textSecondary' gutterBottom>Deaths</Typography>\r\n               <Typography varaint='h5'>\r\n                       <CountUp start={0} end={deaths.value} duration={2.5} separator=\"\"/>\r\n                   </Typography>\r\n                   <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\r\n               <Typography variant='body2'>Number of  deaths caused of COVID-19</Typography>\r\n           </CardContent>\r\n             </Grid> \r\n         </Grid>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async(country)=>{\r\n    let changeableurl= url;\r\n    if(country){\r\n        changeableurl=`${url}/countries/${country}`\r\n    }\r\n\r\n\r\ntry {\r\n    const {data:{confirmed,recovered,deaths,lastUpdate}} = await axios.get(changeableurl);\r\n    return {confirmed, recovered, deaths, lastUpdate};\r\n} catch (error) {\r\n    console.log(error);\r\n    \r\n}\r\n}\r\n\r\nexport const fetchDailyData =async () =>{\r\n    try {\r\n        const {data} = await axios.get(`${url}/daily`);\r\n      const modifiedData = data.map((dailyData)=>({\r\n          confirmed:dailyData.confirmed.total,\r\n          deaths:dailyData.deaths.total,\r\n          date:dailyData.reportDate,\r\n      }));\r\n      return modifiedData;\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const {data:{countries}} = await axios.get(`${url}/countries`);\r\n        return countries.map((country)=> country.name)\r\n        //console.log(resposne);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}","import React, {useState,useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api';\r\nimport {Line, Bar } from 'react-chartjs-2'\r\nimport styles from './Charts.module.css'\r\n\r\nconst Charts = ({data:{confirmed,deaths,recovered },country}) => {\r\n    const [dailyData,setDailyData] = useState([]);\r\n\r\n useEffect(()=>{\r\n     const fetchAPI = async()=> {\r\n         setDailyData(await fetchDailyData());\r\n     }\r\n   \r\n     fetchAPI();\r\n },[]);\r\n\r\n const lineChart =(\r\n   dailyData.length\r\n   ?(\r\n   <Line\r\n    data={{\r\n        labels:dailyData.map(({date})=> date),\r\n        datasets:[{\r\n            data:dailyData.map(({confirmed})=> confirmed),\r\n            label: 'Infected',\r\n            borderColor:'#3333ff',\r\n            fill:true,\r\n        },{\r\n            data:dailyData.map(({deaths})=> deaths),\r\n            label: 'Deaths',\r\n            borderColor:'red',\r\n            backgroundColor:'rgba(255, 0, 0, 0.5)',\r\n            fill:true,\r\n        }],\r\n\r\n    }}\r\n/> ):null\r\n );\r\n\r\n const barChart = (\r\n    confirmed\r\n    ?(\r\n        <Bar\r\n        data={{\r\n             labels:['Infected', 'Recoverd','Deaths'],\r\n             datasets:[{\r\n                 label:'People',\r\n                 backgroundColor:[\r\n                     'rgba(0,0,255,0.5)',\r\n                     'rgba(0,255,0,0.5)',\r\n                     'rgba(255,0,0,0.5)',\r\n                    ],\r\n                    data:[confirmed.value,recovered.value,deaths.value]\r\n             }]\r\n        }}\r\n        options={{\r\n            legend:{display:false},\r\n            title: {display:true,text:`Current state in ${country}`}\r\n        }}\r\n        />\r\n\r\n    ):null\r\n )\r\n    return (\r\n        <div className={styles.container}>\r\n         {country ? barChart:lineChart}\r\n           \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Charts;","import React ,{useState,useEffect} from 'react';\r\nimport {NativeSelect, FormControl} from '@material-ui/core'\r\nimport styles from './CountryPicker.module.css'\r\nimport {fetchCountries} from '../../api'\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n    const [fectchedCountries, setFetchedCountries]=useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchAPI = async ()=> {\r\n               setFetchedCountries(await fetchCountries());\r\n        }\r\n        fetchAPI();\r\n    },[setFetchedCountries]);\r\n    //console.log(fectchedCountries)\r\n    return (\r\n        \r\n           <FormControl className={styles.FormControl}>\r\n               <NativeSelect defaultValue=\"\" onChange={(e)=>handleCountryChange(e.target.value)}>\r\n                   <option value=''> Global</option>\r\n                   {fectchedCountries.map((country,i)=><option key={i} value={country}>{country}</option>)}\r\n               </NativeSelect>\r\n           </FormControl>\r\n       \r\n    );\r\n};\r\n\r\nexport default CountryPicker;","import React, { Component } from 'react'\r\nimport {Cards, Charts,CountryPicker} from './components'\r\nimport styles from './App.module.css'\r\nimport {fetchData} from './api'\r\nimport corona from './img/covid.png'\r\n\r\n class App extends Component {\r\n     state={\r\n         data:{},\r\n         country:''\r\n     }\r\n     async componentDidMount(){\r\n         const fetchedData = await fetchData();\r\n\r\n         this.setState({data:fetchedData});\r\n     }\r\n     handleCountryChange = async (country)=>{\r\n        const fetchedData = await fetchData(country);\r\n        this.setState({data:fetchedData, country:country})\r\n        //console.log(fetchedData);\r\n        // console.log(country);\r\n\r\n     }\r\n    render() {\r\n        const {data,country}=this.state\r\n        return (\r\n            <div className={styles.container}>\r\n                <img className={styles.image} src={corona} alt='COVID-19'/> \r\n             <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n             <Cards data={data}/>\r\n             <Charts data={data} country={country}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>,document.getElementById('root')); ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2YO3i\",\"image\":\"App_image__36YAR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__2QA3y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__391s1\"};","module.exports = __webpack_public_path__ + \"static/media/covid.d7265326.png\";"],"sourceRoot":""}